# NOTE(koekeishiya): A bind is written in the form:
#                   <keysym> [!] [<app list>] [->] : <command>
#                   where
#                       <keysym>   = mode + mod + ... + mod - literal
#
#                       <keysym>   = mode + mod + ... + mod - keycode
#                                    keycode must have 0x prefix
#
#                       <keysym>   = mode + mod + ... + mod - button#
#                                    replace '#' with mouse-button id; id >= 3
#
#                       modifier only binding
#                       <keysym>   = mode + mod + ... + mod
#
#                       literal only binding
#                       <keysym>   = - literal
#
#                       keycode only binding
#                       <keysym>   = - keycode
#
#                       [<app,
#                         app,     = optional list '[app1, ..., appN]' of applications
#                         app>]      that this bind will be activated for. if the
#                                    focused application is not contained in this list,
#                                    the associated command will not be triggered, and
#                                    the keypress will be passed through as normal.
#
#                       [!]        = optional operator '!' negates the behaviour when a
#                                    list of applications is given. this marks the bind
#                                    as 'Hotkey_Exclude', causing the bind to not work
#                                    when the focused application is in the given list.
#
#                       [->]       = optional operator '->' that marks this bind as
#                                    'passthrough'. this causes the key to be passed
#                                    through to the system, instead of being consumed.
#
#                       <command>  = command is executed through '$SHELL -c' and
#                                    follows valid shell syntax. if the $SHELL environment
#                                    variable is not set, it will default to '/bin/bash'.
#                                    when bash is used, the ';' delimeter can be specified
#                                    to chain commands.
#
#                                    to allow a command to extend into multiple lines,
#                                    prepend '\' at the end of the previous line.
#
#                                    an EOL character signifies the end of the bind.

# NOTE(koekeishiya) Example of passthrough
# cmd - m -> : echo "alert and minimize window" | alerter -title Test passthrough -timeout 2

# NOTE(koekeishiya) Example of app list
# alt - e [
#           iTerm2,
#           Terminal,
#           HyperTerm
#         ]
#         : echo "so this is how deep the rabbit hole goes.." |\
#           alerter -title Test passthrough -timeout 2

# NOTE(koekeishiya) Example of negated app list
# alt - e [
#           iTerm2,
#           Terminal,
#           HyperTerm
#         ] !
#         : echo "blue pill, i choose you!" |\
#           alerter -title Test passthrough -timeout 2

# NOTE(koekeishiya) Modifier only binding
# left shift    -> (    right shift   -> )
# left cmd      -> {    right cmd     -> }

# khd mod_trigger_timeout 0.1
# lshift : khd -p "shift - 8"
# rshift : khd -p "shift - 9"
# lcmd   : khd -p "shift + alt - 8"
# rcmd   : khd -p "shift + alt - 9"

# NOTE(koekeishiya) Bind mouse-buttons
# - button3 : khd -w "mouse-button 3 pressed"
# - button4 : khd -w "mouse-button 4 pressed"

# TODO(koekeishiya): possibly allow combined syntax such as
# [switcher,ytd] + ctrl - f : khd -e "mode activate default"

# suppress unregistered keybinds outside default mode
# enabled by default! must be explicitly set to 'off'
# khd void_unlisted_bind off

# set border color for different modes
khd mode default on_enter chunkc border::color 0xff775759
khd mode switcher on_enter chunkc border::color 0xddbdd322
khd mode ytd on_enter chunkc border::color 0xddd75f5f
khd mode swap on_enter chunkc border::color 0xdd458588
khd mode tree on_enter chunkc border::color 0xddfabd2f
khd mode space on_enter chunkc border::color 0xddb16286
khd mode info on_enter chunkc border::color 0xddcd950c

# toggle between modes
ctrl - f                :   khd -e "mode activate switcher"
switcher + ctrl - f     :   khd -e "mode activate default"
ytd + ctrl - f          :   khd -e "mode activate default"
swap + ctrl - f         :   khd -e "mode activate default"
space + ctrl - f        :   khd -e "mode activate default"
tree + ctrl - f         :   khd -e "mode activate default"

switcher - escape       :   khd -e "mode activate default"
swap - escape           :   khd -e "mode activate default"
space - escape          :   khd -e "mode activate default"
tree - escape           :   khd -e "mode activate default"

switcher - a            :   khd -e "mode activate swap"
switcher - s            :   khd -e "mode activate space"
switcher - t            :   khd -e "mode activate tree"
switcher - q            :   khd -e "mode activate info"

# switcher mode
switcher - r            :   khd -e "reload" # reload config

switcher - return       :   open -na /Applications/iTerm.app;\
                            khd -e "mode activate default"

# select windows
switcher - h            :   chunkc tiling::window --focus west
switcher - l            :   chunkc tiling::window --focus east
switcher - j            :   chunkc tiling::window --focus south
switcher - k            :   chunkc tiling::window --focus north
switcher - m            :   chunkc tiling::window --focus prev
switcher - n            :   chunkc tiling::window --focus next

# close window
switcher - w            :   chunkc tiling::window --close;\
                            khd -e "mode activate default"

# swap mode
# swap window position
swap - h                :   chunkc tiling::window --swap west
swap - j                :   chunkc tiling::window --swap south
swap - k                :   chunkc tiling::window --swap north
swap - l                :   chunkc tiling::window --swap east

# move window
swap + shift - k        :   chunkc tiling::window --warp north
swap + shift - l        :   chunkc tiling::window --warp east
swap + shift - j        :   chunkc tiling::window --warp south
swap + shift - h        :   chunkc tiling::window --warp west

swap - 1                :   chunkc tiling::window --send-to-desktop 1
swap - 2                :   chunkc tiling::window --send-to-desktop 2
swap - 3                :   chunkc tiling::window --send-to-desktop 3
swap - 4                :   chunkc tiling::window --send-to-desktop 4
swap - 5                :   chunkc tiling::window --send-to-desktop 5

swap - z                :   chunkc tiling::window --send-to-desktop prev
swap - c                :   chunkc tiling::window --send-to-desktop next

# mirror tree y-axis
swap - y : chunkc tiling::desktop --mirror vertical

# mirror tree x-axis
swap - x : chunkc tiling::desktop --mirror horizontal

# space mode
space - a : chunkc tiling::desktop --layout bsp
space - s : chunkc tiling::desktop --layout monocle
space - d : chunkc tiling::desktop --layout float

# toggle desktop offset
space - o : chunkc tiling::desktop --toggle offset

# adjust desktop padding
space - p               :   chunkc tiling::desktop --padding inc
space + shift - p       :   chunkc tiling::desktop --padding dec

# adjust gap space
space - g               :   chunkc tiling::desktop --gap inc
space + shift - g       :   chunkc tiling::desktop --gap dec

# tree mode
tree - f                :   chunkc tiling::window --toggle fullscreen
tree + shift - f        :   chunkc tiling::window --toggle native-fullscreen
tree - d                :   chunkc tiling::window --toggle parent
tree - w                :   chunkc tiling::window --toggle float
tree - r                :   chunkc tiling::desktop --rotate 90

tree - s : chunkc tiling::window --toggle sticky;\
          chunkc tiling::window --warp-floating pip-right

tree - h                :   chunkc tiling::window --use-temporary-ratio 0.02 --adjust-window-edge west
tree - j                :   chunkc tiling::window --use-temporary-ratio 0.02 --adjust-window-edge south
tree - k                :   chunkc tiling::window --use-temporary-ratio 0.02 --adjust-window-edge north
tree - l                :   chunkc tiling::window --use-temporary-ratio 0.02 --adjust-window-edge east
tree - e                :   chunkc tiling::desktop --equalize

tree + shift - h        :   chunkc tiling::window --use-temporary-ratio -0.02 --adjust-window-edge west
tree + shift - j        :   chunkc tiling::window --use-temporary-ratio -0.02 --adjust-window-edge south
tree + shift - k        :   chunkc tiling::window --use-temporary-ratio -0.02 --adjust-window-edge north
tree + shift - l        :   chunkc tiling::window --use-temporary-ratio -0.02 --adjust-window-edge east